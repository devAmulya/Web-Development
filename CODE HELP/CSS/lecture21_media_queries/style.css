/* .box{
    height: 400px;
    width: 400px;
    background-color: aqua;
    border: 3px solid black;
}

@media (min-width: 300px) and (max-width: 500px){
    .box{
        background-color: green;
    }
} */

/* .container{
    background-color: beige;
    border: 5px solid black;
    margin: 2px;
    padding: 2px;
    display: flex;

}

.box{
    height: 200px;
    width: 200px;
    border: 2px solid brown;
    margin: 2px;
    padding: 2px;
}

#box1{
    background-color: aqua;
}

#box2{
    background-color: blue;
}

#box3{
    background-color: orange;
}

#box4{
    background-color: brown;
}

@media (min-width: 640px){
    .container{
        flex-direction: row;
    }
}

@media (max-width: 640px){
    .container{
        flex-direction: column;
    }
} */

/* .container{
    border: 1px solid black;
    background-color: bisque;
    display: flex;
    flex-direction: row;
    width: 500px;
}

#boxleft{
    background-color: aquamarine;
    border: 1px solid blue;
    width: 47%;
    margin: 2px;
    padding: 2px;
    display: flex;
    flex-direction: column;
}

#boxright{
    background-color: yellow;
    border: 1px solid brown;
    width: 47%;
    margin: 2px;
    padding: 2px;
}

img{
    width: 170px;
}

p{
    border: 1px solid red;
}

@media (max-width: 640px){
    .container{
        flex-direction: column;
    }
} */

.container{
    padding: 40px;
}

h1{
    text-align: center;
    background-color:var(--my-var,green);
}

.box{
    --my-var: red;
    padding: 20px;
    /* background-color:var(--my-var); */
}

.box h2{
    margin-bottom: 20px;
    background-color:var(--my-var);
}


/* Todays Learning : 
1) Responsive desgin - When our site is made differently suited/rendered for various display size
2) Syntax
3) min-width, max-width or width <=  like if-else 
4) (one condition) and (second condition)
5) apply of media query with flex
6) orientation : portrait , landscape
7) media type - screen, print, alt
8) Variables : used to define an attribute
9) Defined :  --varname ex --my-var: red;
10) Has scope of variable according to where it is defined
11) fallback - if var not found , alternative color
12) override of variable is possible
13) global variable - root variable
*/